<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPersonaje</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>velocidad = 4;

llave1 = false;
llave2 = false;

Diamante1 = false;
Diamante2 = false;
Diamante3 = false;
Diamante4 = false;
Diamante5 = false;
diamante6 = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// movimiento del jugador

if (!place_meeting(x-velocidad,y,objMuro))&amp;&amp;(!place_meeting(x-velocidad,y,objpuerta))
    {
    if (keyboard_check_direct(vk_left)){x = x-velocidad;}
    }
    
if (!place_meeting(x+velocidad,y,objMuro))&amp;&amp;(!place_meeting(x+velocidad,y,objpuerta))  
    {
if (keyboard_check_direct(vk_right)){x = x+velocidad;}
    }
    
if (!place_meeting(x,y-velocidad,objMuro))&amp;&amp;(!place_meeting(x,y-velocidad,objpuerta))   
    {
if (keyboard_check_direct(vk_up)){y = y-velocidad;}
    }
    
if (!place_meeting(x,y+velocidad,objMuro))&amp;&amp;(!place_meeting(x,y+velocidad,objpuerta)) 
    {
    if (keyboard_check_direct(vk_down)){y = y+velocidad;}
    }
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//// Gestion de llaves

/*  se utilizara place_meeting para verificar la colisión con algúna llave luego se destruye la llave y se pone a true la variable respectiva en el objeto principal de llave.
    */
    
if (place_meeting(x,y, objllave1))
    {
    with (objllave1){instance_destroy();}
    llave1 = true;
    audio_play_sound(sndDiamante, 10, false);
    }

if (place_meeting(x,y, objllave2))
    {
    with (objllave2){instance_destroy();}
    llave2 = true;
    audio_play_sound(sndDiamante, 10, false);
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//// Gestion de puerta

/*  En forma similar a las llaves se verificara el estado de la variable respectiva de la llave, la colision y luego se destruye la puerta.
    */
    
if(llave1)
    {
    if(place_meeting(x+velocidad, y, objpuerta))||
    (place_meeting(x-velocidad, y, objpuerta))||
    (place_meeting(x, y-velocidad, objpuerta))||
    (place_meeting(x, y+velocidad, objpuerta))
        {
        with(objpuerta){instance_destroy();}
        audio_play_sound(sndpuerta, 10,false);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//// Gestion de Diamante

/*  se utilizara place_meeting para verificar la colisión con algún diamante  luego se destruye el diamante y se pone a true la variable respectiva en el objeto principal del diamante.
    */
    
if (place_meeting(x,y, objDiamante))
    {
    with (objDiamante){instance_destroy();}
    Diamante = true;
    audio_play_sound(sndDiamante, 10, false);
    }
    
if (place_meeting(x,y, objDiamante2))
    {
    with (objDiamante2){instance_destroy();}
    Diamante = true;
    audio_play_sound(sndDiamante, 10, false);
    }
    
if (place_meeting(x,y, objDiamante3))
    {
    with (objDiamante3){instance_destroy();}
    Diamante = true;
    audio_play_sound(sndDiamante, 10, false);
    }
    
if (place_meeting(x,y, objDiamante4))
    {
    with (objDiamante4){instance_destroy();}
    Diamante = true;
    audio_play_sound(sndDiamante, 10, false);
    }
    
if (place_meeting(x,y, objDiamante5))
    {
    with (objDiamante5){instance_destroy();}
    Diamante = true;
    audio_play_sound(sndDiamante, 10, false);
    }
    
if (place_meeting(x,y, objDiamante6))
    {
    with (objDiamante6){instance_destroy();}
    Diamante = true;
    audio_play_sound(sndDiamante, 10, false);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objenemigopadre">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
audio_play_sound(sndmuerte, 15, false);
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFin">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(sndcambo_de_lv, 15,false);

 if (room_exists(room_next(room)))
     {room_goto_next();}
     else
     {room_goto(Nivel1);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
